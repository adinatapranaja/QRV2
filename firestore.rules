rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function to get user role (with fallback)
    function getUserRole() {
      return exists(/databases/$(database)/documents/users/$(request.auth.uid)) ?
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role : 'client';
    }
    
    // Helper function to check if user is owner
    function isOwner() {
      return getUserRole() == 'owner';
    }
    
    // Helper function to check if user is admin or owner
    function isAdminOrOwner() {
      return getUserRole() in ['admin', 'owner'];
    }
    
    // Users collection - for user management
    match /users/{userId} {
      // Read: Users can read their own data, admins/owners can read all
      allow read: if isAuthenticated() && 
        (request.auth.uid == userId || isAdminOrOwner());
      
      // Create: Allow user creation during registration
      allow create: if isAuthenticated() && 
        request.auth.uid == userId;
      
      // Update: Users can update their own profile, owners can update roles
      allow update: if isAuthenticated() && (
        request.auth.uid == userId || isOwner()
      );
      
      // Delete: Only owners can delete users (except themselves)
      allow delete: if isOwner() && request.auth.uid != userId;
    }
    
    // User profiles collection - extended user information
    match /user_profiles/{userId} {
      allow read, write: if isAuthenticated() && 
        (request.auth.uid == userId || isAdminOrOwner());
      allow create: if isAuthenticated();
    }
    
    // Events collection
    match /events/{eventId} {
      // Read: Any authenticated user can read events
      allow read: if isAuthenticated();
      
      // Create/Update: Any authenticated user can manage events
      allow create, update: if isAuthenticated();
      
      // Delete: Event creator or owner can delete
      allow delete: if isAuthenticated();
    }
    
    // Guests collection - FIXED PERMISSIONS
    match /guests/{guestId} {
      // Allow authenticated users to read and write guests
      allow read, write: if isAuthenticated();
      
      // Allow creation with proper data
      allow create: if isAuthenticated() && 
        request.resource.data.keys().hasAll(['name', 'email', 'eventId', 'createdAt']);
    }
    
    // Activities collection - for recent activity feed
    match /activities/{activityId} {
      // Read: Any authenticated user can read activities
      allow read: if isAuthenticated();
      
      // Create: Anyone authenticated can create activities (for logging)
      allow create: if isAuthenticated();
      
      // Update: Any authenticated user can update
      allow update: if isAuthenticated();
      
      // Delete: Any authenticated user can delete
      allow delete: if isAuthenticated();
    }
    
    // App settings collection
    match /app_settings/{settingId} {
      // Read: Any authenticated user can read settings
      allow read: if isAuthenticated();
      
      // Write: Any authenticated user can write (for development)
      allow write: if isAuthenticated();
    }
    
    // Analytics collection - for reports and charts
    match /analytics/{analyticsId} {
      // Read: Any authenticated user can read analytics
      allow read: if isAuthenticated();
      
      // Create: Any authenticated user can create analytics entries
      allow create: if isAuthenticated();
      
      // Update/Delete: Any authenticated user
      allow update, delete: if isAuthenticated();
    }
    
    // Reports collection - for saved reports
    match /reports/{reportId} {
      // Read: Any authenticated user can read reports
      allow read: if isAuthenticated();
      
      // Create: Any authenticated user can create reports
      allow create: if isAuthenticated();
      
      // Update: Any authenticated user can update
      allow update: if isAuthenticated();
      
      // Delete: Any authenticated user can delete
      allow delete: if isAuthenticated();
    }
    
    // Notifications collection
    match /notifications/{notificationId} {
      // Read: Any authenticated user can read notifications
      allow read: if isAuthenticated();
      
      // Create: Any authenticated user can create notifications
      allow create: if isAuthenticated();
      
      // Update: Any authenticated user can update
      allow update: if isAuthenticated();
      
      // Delete: Any authenticated user can delete
      allow delete: if isAuthenticated();
    }
    
    // Subscriptions collection - for payment/subscription info
    match /subscriptions/{subscriptionId} {
      // Read: Any authenticated user can read subscriptions
      allow read: if isAuthenticated();
      
      // Create/Update: Any authenticated user can manage subscriptions
      allow create, update: if isAuthenticated();
      
      // Delete: Any authenticated user can delete subscriptions
      allow delete: if isAuthenticated();
    }
    
    // Public content that anyone can read
    match /public/{document} {
      allow read: if true;
      allow write: if isAuthenticated();
    }
    
    // Temporary: Allow all for development (REMOVE IN PRODUCTION)
    match /{document=**} {
      allow read, write: if isAuthenticated();
    }
  }
}